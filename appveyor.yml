environment:
  matrix:
    - platform: x86
      julia: 0.4
      link: "julialang/bin/winnt/x86/0.4/julia-0.4-latest-win32.exe"
    - platform: x86
      julia: 0.5
      link: "julialang/bin/winnt/x86/0.5/julia-0.5-latest-win32.exe"
    - platform: x86
      julia: nightly
      link: "julianightlies/bin/winnt/x86/julia-latest-win32.exe"
    - platform: x64
      julia: 0.4
      link: "julialang/bin/winnt/x64/0.4/julia-0.4-latest-win64.exe"
    - platform: x64
      julia: 0.5
      link: "julialang/bin/winnt/x64/0.5/julia-0.5-latest-win64.exe"
    - platform: x64
      julia: nightly
      link: "julianightlies/bin/winnt/x64/julia-latest-win64.exe"

matrix:
  fast_finish: true
  allow_failures:
    - julia: nightly

notifications:
  - provider: Email
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: false

install:
  - ps: "[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12"
  - ps: (new-object net.webclient).DownloadFile(
        $("http://s3.amazonaws.com/"+$env:link),
        "C:\projects\julia-binary.exe")
  - C:\projects\julia-binary.exe /S /D=C:\projects\julia

build_script:
  - IF EXIST .git\shallow (git fetch --unshallow)
  - C:\projects\julia\bin\julia -e "versioninfo();
      Pkg.clone(pwd(), \"RationalFunctions\"); Pkg.build(\"RationalFunctions\")"

test_script:
  - C:\projects\julia\bin\julia -e "Pkg.test(\"RationalFunctions\")"
  - C:\projects\julia\bin\julia -e "Pkg.dir(\"RationalFunctions\") |> println" > folder.txt
  - set /p TEST_FOLDER=<folder.txt
  - move %TEST_FOLDER%\test\test-plot.png test-plot-win-%PLATFORM%-%JULIA%.png

artifacts:
  path: test-plot-win-$(platform)-$(julia).png
  name: test-plot
  type: png

deploy:
  description: $(APPVEYOR_REPO_TAG_NAME)
  provider: GitHub
  auth_token:
    secure: +XlrRjXlE8VtzuCxQeVkctOj9XTZhZWtXVb/eHJyGMBvptlK+JUyAcfzz41NXNS1
  artifact: test-plot
  force_update: true
  on:
    appveyor_repo_tag: true
